var jBlue   = "#151e8c";  // Also defined in master.css.scss
// var jYellow = "#cf9f3e";  // Ditto

// from accepted answer to stackoverflow.com/questions/4233265/
function placeCaretAtEnd(el) {
  if (typeof window.getSelection != "undefined" &&
      typeof document.createRange != "undefined") {
    var range = document.createRange();
    range.selectNodeContents(el);
    range.collapse(false);
    var sel = window.getSelection();
    sel.removeAllRanges();
    sel.addRange(range);
  } else if (typeof document.body.createTextRange != "undefined") {
    var textRange = document.body.createTextRange();
    textRange.moveToElementText(el);
    textRange.collapse(false);
    textRange.select();
  }
}

$(function() {
  var score = 0;
  var $scoreboard = $( "#game-container #score" );
  $scoreboard.html( "$" + score );

  var $clue = $( "#game-container #clue-over-board" );
  var clueVanishX;  // Coordinates to which the clue action div should
  var clueVanishY;  // disappear (back into the box whence it came).

  $( "#game-container .clue-box" ).on( "click", function( event ) {
    var $elem = $( this );
    var boxValue = $elem.data( "boxvalue" );
    var rowValue = $elem.data( "rowvalue" );

    $elem.css( "background-color", jBlue );
    clueVanishX = event.offsetX + event.toElement.offsetLeft;
    clueVanishY = event.offsetY + event.toElement.offsetTop;

    $clue.show( "scale", { origin: [clueVanishY, clueVanishX] }, 200,
        function() {
          $elem.html( boxValue ? "" : "$" + rowValue );
        });
    $clue.css( "display", "flex" );

    // console.log( "display event object: " );
    // console.log( $elem.data( "value" ));
    // console.dir( event );
    // var dispX = event.offsetX + event.toElement.offsetLeft;
    // var dispY = event.offsetY + event.toElement.offsetTop;
    // console.log( "Display: ( " + dispX + ", " + dispY + ")" );

    if ( boxValue ) {
      $clue.html( "<h1>Value added!</h1>" );
      // $elem.html( '' );
      score += boxValue;
      $elem.data( "boxvalue", 0 );
    } else {
      $clue.html( "<h1>Value deducted.</h1>");
      // $elem.html( "$" + rowValue );
      score -= rowValue;
      $elem.data( "boxvalue", rowValue);
    }
    $scoreboard.html( "$" + score );
  });

  $clue.on( "click", function( event ) {
    // console.log( "hide event object: " );
    // console.dir( event );
    // console.log( "Hide: ( " + event.offsetX + ", " + event.offsetY + ")" );

    // $( this ).hide( "scale", 200 );
    $clue.hide( "scale", { origin: [clueVanishY, clueVanishX] }, 200 );
    // $( this ).hide( "scale",
    //                 { origin: [0.75 * $( this ).height(),
    //                            0.25 * $( this ).height()] },
    //                 750 );
  });

  $( "#game-container .cat-title" ).on( "click", function() {
    $( this ).find( "p" ).focus();
  });

  $( "#game-container .cat-title p" ).on( "focus", function() {
    var $elem = $( this );
    // console.log( $elem.html().trim() );
    // console.log( $elem.data( "defaultvalue" ) );
    if ( $elem.html().trim() === $elem.data( "defaultvalue" ) ) {
      $elem.html( "" );
    }
    $elem.toggleClass( "default-cat", false );
    // TODO: This is bad when clicking a title that already had focus:
    // placeCaretAtEnd( $elem.get(0) );
  });

  $( "#game-container .cat-title p" ).on( "blur", function() {
    var $elem = $( this );
    console.log ( '"' + $elem.html().trim() + '"' );
    console.log ( '"' + $elem.html().replace(/&nbsp;/gi, "").trim() + '"' );
    if ( $elem.html().replace( /&nbsp;/gi, "" )
        .replace( /<br>/gi, "" ).trim() === "" ) {
      $elem.toggleClass( "default-cat", true );
      $elem.html( $elem.data( "defaultvalue" ) );
    }
  });

});
